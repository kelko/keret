apiVersion: apps/v1
kind: Deployment
metadata:
  name: keret-service
  labels:
    app: keret-service
    bundle: keret
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keret-service
      bundle: keret
  template:
    metadata:
      labels:
        app: keret-service
        bundle: keret
    spec:
      containers:
        - name: web
          image: kelko/keret-service:0.1-aarch64
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: keret-service
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: keret-service
  labels:
    app: keret-service
    bundle: keret
spec:
  ports:
    - port: 3000
  selector:
    app: keret-service
    bundle: keret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-keret
  labels:
    app: keret-service
    bundle: keret
  annotations:
    traefik.ingress.kubernetes.io/proxy-body-size: 8m
    traefik.ingress.kubernetes.io/router.middlewares: default-keret-path@kubernetescrd
spec:
  rules:
    - http:
        paths:
          - path: /keret
            pathType: Prefix
            backend:
              service:
                name: keret-service
                port:
                  number: 3000
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: keret-path
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
      - /keret
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: keret-service
  namespace: monitoring
  labels:
    app: keret-service
    bundle: keret
    release: "prometheus"
spec:
  selector:
    matchLabels:
      app: keret-service
      bundle: keret
  namespaceSelector:
    matchNames:
      - default
  podMetricsEndpoints:
    - port: keret-service